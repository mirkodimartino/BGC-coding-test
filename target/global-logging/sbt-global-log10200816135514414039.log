[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.5.2 (JetBrains s.r.o. Java 11.0.10)
[debug]       Load.loadUnit: plugins took 89.509996ms
[debug]       Load.loadUnit: defsScala took 0.300818ms
[debug] [Loading] Scanning directory /Users/mirkodimartino/.sbt/1.0/plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in /Users/mirkodimartino/.sbt/1.0/plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 18.19921 ms
[debug]           Load.resolveProject(global-plugins) took 50.696521ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: /Users/mirkodimartino/.sbt/1.0/plugins, plugins: List(<none>))) took 108.140649ms
[debug] [Loading] Done in /Users/mirkodimartino/.sbt/1.0/plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 129.766477ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.250831ms
[debug]     Load.loadUnit(file:/Users/mirkodimartino/.sbt/1.0/plugins/, ...) took 227.897085ms
[debug]   Load.apply: load took 576.300671ms
[debug]   Load.apply: resolveProjects took 6.558278ms
[debug]   Load.apply: finalTransforms took 58.531095ms
[debug]   Load.apply: config.delegates took 5.780331ms
[debug]   Load.apply: Def.make(settings)... took 348.507993ms
[debug]   Load.apply: structureIndex took 83.784826ms
[debug]   Load.apply: mkStreams took 1.247443ms
[info] loading global plugins from /Users/mirkodimartino/.sbt/1.0/plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 2333.636343ms
[debug]           Load.loadUnit: plugins took 16.40759ms
[debug]           Load.loadUnit: defsScala took 0.003321ms
[debug] [Loading] Scanning directory /Users/mirkodimartino/Workspace/bgc/project
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in /Users/mirkodimartino/Workspace/bgc/project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 1.724838 ms
[debug]               Load.resolveProject(bgc-build) took 0.859902ms
[debug]             Load.loadTransitive: finalizeProject(Project(id bgc-build, base: /Users/mirkodimartino/Workspace/bgc/project, plugins: List(<none>))) took 3.022541ms
[debug] [Loading] Done in /Users/mirkodimartino/Workspace/bgc/project, returning: (bgc-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 4.456232ms
[debug]           Load.loadUnit: cleanEvalClasses took 0.007788ms
[debug]         Load.loadUnit(file:/Users/mirkodimartino/Workspace/bgc/project/, ...) took 21.469889ms
[debug]       Load.apply: load took 22.46286ms
[debug]       Load.apply: resolveProjects took 0.099563ms
[debug]       Load.apply: finalTransforms took 8.675629ms
[debug]       Load.apply: config.delegates took 0.381984ms
[debug]       Load.apply: Def.make(settings)... took 64.236518ms
[debug]       Load.apply: structureIndex took 24.92239ms
[debug]       Load.apply: mkStreams took 0.002197ms
[info] loading project definition from /Users/mirkodimartino/Workspace/bgc/project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 240.522816ms
[debug]     Load.loadUnit: defsScala took 0.003209ms
[debug] [Loading] Scanning directory /Users/mirkodimartino/Workspace/bgc
[debug]       Load.loadUnit: mkEval took 7.411181ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in /Users/mirkodimartino/Workspace/bgc, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 2.710673 ms
[info] loading settings for project bgc from build.sbt ...
[debug]         Load.resolveProject(bgc) took 3.175323ms
[debug]       Load.loadTransitive: finalizeProject(Project(id bgc, base: /Users/mirkodimartino/Workspace/bgc, plugins: List(<none>))) took 6.672114ms
[debug] [Loading] Done in /Users/mirkodimartino/Workspace/bgc, returning: (bgc)
[debug]     Load.loadUnit: loadedProjectsRaw took 110.747013ms
[debug]     Load.loadUnit: cleanEvalClasses took 7.7615ms
[debug]   Load.loadUnit(file:/Users/mirkodimartino/Workspace/bgc/, ...) took 359.78919ms
[debug] Load.apply: load took 361.234271ms
[debug] Load.apply: resolveProjects took 0.08847ms
[debug] Load.apply: finalTransforms took 9.373455ms
[debug] Load.apply: config.delegates took 0.368629ms
[debug] Load.apply: Def.make(settings)... took 86.232152ms
[debug] Load.apply: structureIndex took 22.055496ms
[debug] Load.apply: mkStreams took 0.002306ms
[info] set current project to hello-world (in build file:/Users/mirkodimartino/Workspace/bgc/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(shell, None, None)
[info] sbt server started at local:///Users/mirkodimartino/.sbt/1.0/server/c317ee785fce858694f4/sock
[debug] Writing bsp connection file
[info] started sbt server
